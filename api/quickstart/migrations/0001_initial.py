# Generated by Django 2.2.12 on 2020-05-05 19:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annualreport',
            fields=[
                ('annualreportid', models.AutoField(db_column='AnnualReportID', primary_key=True, serialize=False)),
                ('reportyear', models.CharField(db_column='ReportYear', max_length=4)),
            ],
            options={
                'db_table': 'AnnualReport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBak010912',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_bak_010912',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBak012412',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_bak_012412',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBak022613',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_bak_022613',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBak102814',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_bak_102814',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersBak110513',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_bak_110513',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersRollover',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(blank=True, db_column='ElementID', null=True)),
                ('elementidnew', models.IntegerField(blank=True, db_column='ElementIDNew', null=True)),
                ('statecode', models.CharField(blank=True, db_column='StateCode', max_length=2, null=True)),
                ('programcode', models.IntegerField(blank=True, db_column='ProgramCode', null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
                ('updated', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Answers_rollover',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersRollover2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(blank=True, db_column='ElementID', null=True)),
                ('elementidnew', models.IntegerField(blank=True, db_column='ElementIDNew', null=True)),
                ('statecode', models.CharField(blank=True, db_column='StateCode', max_length=2, null=True)),
                ('programcode', models.IntegerField(blank=True, db_column='ProgramCode', null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
                ('updated', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Answers_rollover2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswersTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'answers_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(db_column='FileName', max_length=100)),
                ('description', models.CharField(db_column='Description', max_length=255)),
                ('year', models.CharField(db_column='Year', max_length=4)),
            ],
            options={
                'db_table': 'Attachments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditElementChoices',
            fields=[
                ('audit_datetime', models.DateTimeField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=15)),
                ('pre_choices', models.CharField(blank=True, max_length=150, null=True)),
                ('post_choices', models.CharField(blank=True, max_length=150, null=True)),
                ('elementid', models.IntegerField(db_column='ElementID')),
            ],
            options={
                'db_table': 'audit_element_choices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditTableUpdate',
            fields=[
                ('audit_datetime', models.DateTimeField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=15)),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('elementid', models.IntegerField(db_column='ElementID')),
                ('audit_type_cd', models.CharField(max_length=2)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=16, null=True)),
                ('year', models.IntegerField(db_column='Year')),
            ],
            options={
                'db_table': 'audit_table_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Certificationinfo',
            fields=[
                ('statecode', models.CharField(db_column='StateCode', max_length=2, primary_key=True, serialize=False)),
                ('reportyear', models.CharField(db_column='ReportYear', max_length=4)),
                ('signature', models.CharField(blank=True, db_column='Signature', max_length=50, null=True)),
                ('programtype', models.CharField(blank=True, db_column='ProgramType', max_length=2, null=True)),
                ('contact', models.CharField(blank=True, db_column='Contact', max_length=50, null=True)),
                ('address1', models.CharField(blank=True, db_column='Address1', max_length=50, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=25, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=2, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=10, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=25, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=25, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('submissiondate', models.DateTimeField(blank=True, db_column='SubmissionDate', null=True)),
                ('certificationdate', models.DateTimeField(blank=True, db_column='CertificationDate', null=True)),
                ('iscertified', models.BooleanField(blank=True, db_column='IsCertified', null=True)),
                ('medicaid', models.BooleanField(db_column='Medicaid')),
            ],
            options={
                'db_table': 'CertificationInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Choices',
            fields=[
                ('choiceid', models.IntegerField(db_column='ChoiceID', primary_key=True, serialize=False)),
                ('choicetext', models.CharField(db_column='ChoiceText', max_length=5000)),
                ('choicesequence', models.IntegerField(blank=True, db_column='ChoiceSequence', null=True)),
                ('explanationtextelementid', models.IntegerField(blank=True, db_column='ExplanationTextElementID', null=True)),
                ('reportchoicetext', models.CharField(blank=True, db_column='ReportChoiceText', max_length=5000, null=True)),
            ],
            options={
                'db_table': 'Choices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Choicesdescription',
            fields=[
                ('choiceid', models.IntegerField(db_column='ChoiceID', primary_key=True, serialize=False)),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
                ('choicetext', models.CharField(blank=True, db_column='ChoiceText', max_length=5000, null=True)),
            ],
            options={
                'db_table': 'ChoicesDescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dtproperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('property', models.CharField(max_length=64)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('uvalue', models.CharField(blank=True, max_length=255, null=True)),
                ('lvalue', models.BinaryField(blank=True, null=True)),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'dtproperties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2009',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2009',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2010',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2010',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2011',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2011',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2011Wr3731',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2011_WR3731',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2012',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2012',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2013',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2013',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2014',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2014',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2015',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2015',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2016',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2016',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2017',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2017',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2018',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FmapratesBak2019',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'fmaprates_bak_2019',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prefilledelementids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField()),
            ],
            options={
                'db_table': 'PreFilledElementIDs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrefilledelementidsBak2010',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementid', models.IntegerField()),
            ],
            options={
                'db_table': 'PreFilledElementIDs_bak_2010',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questionelement',
            fields=[
                ('elementid', models.IntegerField(db_column='ElementID', primary_key=True, serialize=False)),
                ('maxlength', models.IntegerField(blank=True, db_column='MaxLength', null=True)),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
                ('type1description', models.CharField(blank=True, db_column='Type1Description', max_length=225, null=True)),
                ('type2description', models.CharField(blank=True, db_column='Type2Description', max_length=100, null=True)),
                ('linktoelementid', models.IntegerField(blank=True, db_column='LinkToElementID', null=True)),
                ('linktoelementvalue', models.CharField(blank=True, db_column='LinkToElementValue', max_length=150, null=True)),
                ('linktoquestiontypeid', models.IntegerField(blank=True, db_column='LinkToQuestionTypeID', null=True)),
                ('requiredforcert', models.BooleanField(blank=True, db_column='RequiredForCert', null=True)),
            ],
            options={
                'db_table': 'QuestionElement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questiontypes',
            fields=[
                ('questiontypeid', models.AutoField(db_column='QuestionTypeID', primary_key=True, serialize=False)),
                ('questiontypename', models.CharField(db_column='QuestionTypeName', max_length=100)),
            ],
            options={
                'db_table': 'QuestionTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('sectionid', models.IntegerField(db_column='SectionID', primary_key=True, serialize=False)),
                ('sectiontitle', models.CharField(db_column='SectionTitle', max_length=150)),
                ('issubsection', models.BooleanField(db_column='IsSubsection')),
                ('parentsectionid', models.IntegerField(blank=True, db_column='ParentSectionID', null=True)),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
            ],
            options={
                'db_table': 'Sections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessionsave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=15, null=True)),
                ('sessionid', models.CharField(blank=True, db_column='SessionID', max_length=36, null=True)),
                ('sessioncreation', models.DateTimeField(blank=True, db_column='SessionCreation', null=True)),
            ],
            options={
                'db_table': 'SessionSave',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stateprograms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programcode', models.CharField(blank=True, db_column='ProgramCode', max_length=100, null=True)),
                ('programdescription', models.CharField(blank=True, db_column='ProgramDescription', max_length=100, null=True)),
                ('startyear', models.CharField(blank=True, db_column='StartYear', max_length=4, null=True)),
                ('endyear', models.CharField(blank=True, db_column='EndYear', max_length=4, null=True)),
                ('primaryprogram', models.BooleanField(blank=True, db_column='PrimaryProgram', null=True)),
                ('medicaid', models.BooleanField(blank=True, db_column='Medicaid', null=True)),
            ],
            options={
                'db_table': 'StatePrograms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('statecode', models.CharField(db_column='StateCode', max_length=2, primary_key=True, serialize=False)),
                ('statename', models.CharField(blank=True, db_column='StateName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'States',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tablecells',
            fields=[
                ('colid', models.AutoField(db_column='ColID', primary_key=True, serialize=False)),
                ('rowspan', models.IntegerField(blank=True, db_column='RowSpan', null=True)),
                ('colspan', models.IntegerField(blank=True, db_column='ColSpan', null=True)),
                ('headercell', models.BooleanField(db_column='HeaderCell')),
                ('celltext', models.CharField(blank=True, db_column='CellText', max_length=5000, null=True)),
                ('textelementorder', models.CharField(blank=True, db_column='TextElementOrder', max_length=1, null=True)),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
            ],
            options={
                'db_table': 'TableCells',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tablerows',
            fields=[
                ('rowid', models.AutoField(db_column='RowID', primary_key=True, serialize=False)),
                ('rowsequence', models.IntegerField(blank=True, db_column='RowSequence', null=True)),
            ],
            options={
                'db_table': 'TableRows',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tables',
            fields=[
                ('tableid', models.AutoField(db_column='TableID', primary_key=True, serialize=False)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=100, null=True)),
                ('tabletitle', models.CharField(blank=True, db_column='TableTitle', max_length=500, null=True)),
                ('border', models.BooleanField(db_column='Border')),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
                ('isembedded', models.BooleanField(blank=True, db_column='IsEmbedded', null=True)),
            ],
            options={
                'db_table': 'Tables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblsurveyopen',
            fields=[
                ('surveyyear', models.IntegerField(db_column='SurveyYear', primary_key=True, serialize=False)),
                ('opendate', models.DateTimeField(db_column='OpenDate')),
            ],
            options={
                'db_table': 'tblSurveyOpen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.FloatField(blank=True, db_column='StandardErrorNumber', null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.FloatField(blank=True, db_column='StandardErrorRate', null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2010',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2010',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2011',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2011',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2012',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2012',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2013',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2013',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2014',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2014',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2015',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2015',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2016',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2016',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2017',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2017',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2018',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2018',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UninsuredchildrenaveragesBak2019',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages_bak_2019',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('elementid', models.ForeignKey(db_column='ElementID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='answersElementid', serialize=False, to='quickstart.Questionelement')),
                ('year', models.IntegerField(db_column='Year')),
                ('answertext', models.CharField(blank=True, db_column='AnswerText', max_length=7500, null=True)),
                ('answerchoices', models.CharField(blank=True, db_column='AnswerChoices', max_length=150, null=True)),
            ],
            options={
                'db_table': 'Answers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditElementPostText',
            fields=[
                ('audit_datetime', models.OneToOneField(db_column='audit_datetime', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='auditelementposttextAudit_datetime', serialize=False, to='quickstart.AuditTableUpdate')),
                ('post_text', models.CharField(blank=True, max_length=7500, null=True)),
            ],
            options={
                'db_table': 'audit_element_post_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditElementPreText',
            fields=[
                ('audit_datetime', models.OneToOneField(db_column='audit_datetime', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='auditelementpretextAudit_datetime', serialize=False, to='quickstart.AuditTableUpdate')),
                ('pre_text', models.CharField(blank=True, max_length=7500, null=True)),
            ],
            options={
                'db_table': 'audit_element_pre_text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Choicetextlist',
            fields=[
                ('choiceid', models.OneToOneField(db_column='ChoiceID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='choicetextlistChoiceid', serialize=False, to='quickstart.Choices')),
                ('textlistsequence', models.IntegerField(db_column='TextListSequence')),
                ('leadingtext', models.CharField(blank=True, db_column='LeadingText', max_length=1000, null=True)),
                ('textarearows', models.IntegerField(blank=True, db_column='TextAreaRows', null=True)),
                ('textareacols', models.IntegerField(blank=True, db_column='TextAreaCols', null=True)),
                ('maxlength', models.IntegerField(blank=True, db_column='MaxLength', null=True)),
                ('keepdataonuncheck', models.BooleanField(blank=True, db_column='KeepDataOnUncheck', null=True)),
                ('showmaxlength', models.BooleanField(blank=True, db_column='ShowMaxLength', null=True)),
            ],
            options={
                'db_table': 'ChoiceTextList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fmaprates',
            fields=[
                ('statecode', models.OneToOneField(db_column='StateCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.States')),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'FMAPRates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fmaprates2',
            fields=[
                ('statecode', models.OneToOneField(db_column='StateCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.States')),
                ('fiscalyear', models.CharField(db_column='FiscalYear', max_length=4)),
                ('rate', models.FloatField(db_column='Rate')),
            ],
            options={
                'db_table': 'FMAPRates2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Longanswers',
            fields=[
                ('elementid', models.OneToOneField(db_column='ElementID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.Questionelement')),
                ('statecode', models.CharField(db_column='StateCode', max_length=2)),
                ('year', models.IntegerField(db_column='Year')),
                ('programcode', models.IntegerField(db_column='ProgramCode')),
                ('longanswertext', models.TextField(blank=True, db_column='LongAnswerText', null=True)),
            ],
            options={
                'db_table': 'LongAnswers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questionelementdescription',
            fields=[
                ('elementid', models.OneToOneField(db_column='ElementID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.Questionelement')),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
                ('type1description', models.CharField(blank=True, db_column='Type1Description', max_length=225, null=True)),
            ],
            options={
                'db_table': 'QuestionElementDescription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requiredforcert',
            fields=[
                ('elementid', models.OneToOneField(db_column='ElementID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='requiredforecertElementid', serialize=False, to='quickstart.Questionelement')),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
            ],
            options={
                'db_table': 'RequiredForCert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectionmedicaid',
            fields=[
                ('sectionid', models.OneToOneField(db_column='SectionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.Sections')),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
            ],
            options={
                'db_table': 'SectionMedicaid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectionstartpage',
            fields=[
                ('sectionid', models.OneToOneField(db_column='SectionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.Sections')),
                ('startpage', models.IntegerField(db_column='StartPage')),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
            ],
            options={
                'db_table': 'SectionStartPage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sectiontitle',
            fields=[
                ('sectionid', models.OneToOneField(db_column='SectionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='sectiontitleSectionid', serialize=False, to='quickstart.Sections')),
                ('startyear', models.IntegerField(db_column='StartYear')),
                ('endyear', models.IntegerField(blank=True, db_column='EndYear', null=True)),
                ('sectiontitle', models.CharField(blank=True, db_column='SectionTitle', max_length=225, null=True)),
            ],
            options={
                'db_table': 'SectionTitle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Uninsuredchildrenaverages',
            fields=[
                ('statecode', models.OneToOneField(db_column='StateCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quickstart.States')),
                ('year', models.IntegerField(db_column='Year')),
                ('linenum', models.IntegerField(db_column='LineNum')),
                ('periodyears', models.CharField(blank=True, db_column='PeriodYears', max_length=12, null=True)),
                ('number', models.FloatField(blank=True, db_column='Number', null=True)),
                ('standarderrornumber', models.CharField(blank=True, db_column='StandardErrorNumber', max_length=20, null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
                ('standarderrorrate', models.CharField(blank=True, db_column='StandardErrorRate', max_length=20, null=True)),
                ('asterisktext', models.CharField(blank=True, db_column='AsteriskText', max_length=500, null=True)),
                ('asterisktext2', models.CharField(blank=True, db_column='AsteriskText2', max_length=500, null=True)),
            ],
            options={
                'db_table': 'UninsuredChildrenAverages',
                'managed': False,
            },
        ),
    ]
